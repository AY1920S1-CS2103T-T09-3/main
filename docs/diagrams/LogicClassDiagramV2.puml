@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic {

package Parser {
Interface Parser <<Interface>>
Class AddressBookParser
Class XYZCommandParser
Class CliSyntax
Class ParserUtil
Class ArgumentMultimap
Class ArgumentTokenizer
Class Prefix
}

package commons {
Class CommandHistory
}

package Command {
Class XYZCommand
Class ABCCommand
Class CommandResult
Class "<<interface>>\nCommand" as Command
Class "{abstract}\nReversibleCommand" as ReversibleCommand
Class "{abstract}\nNonActionableCommand" as NonActionableCommand
Class NonReversibleActionPairCommand
note left of XYZCommand: XYZCommand = ListAppointmentCommand, \nListAppointmentCommand, etc
note right of ABCCommand: XYZCommand = EnqueueCommand, \nDequeueCommand, etc
}

Interface Logic <<Interface>>
Class LogicManager
}

package Model{
Class HiddenModel #FFFFFF
}

Class HiddenOutside #FFFFFF
HiddenOutside .down.> Logic

LogicManager .up.|> Logic
LogicManager -->"1" AddressBookParser
LogicManager .left.> Command : executes >
LogicManager --> Model

AddressBookParser .left.> XYZCommandParser: creates >

XYZCommandParser ..> XYZCommand : creates >
XYZCommandParser ..|> Parser
XYZCommandParser ..> ArgumentMultimap
XYZCommandParser ..> ArgumentTokenizer
XYZCommandParser ..> CliSyntax
XYZCommandParser ..> ParserUtil

XYZCommand -up-|> NonActionableCommand

ArgumentTokenizer .down.> Prefix
ArgumentTokenizer .left.> ArgumentMultimap
CliSyntax ..> Prefix
ParserUtil .down.> Prefix

ReversibleCommand .--|> Command
NonActionableCommand .--|> Command
NonReversibleActionPairCommand .--|> Command
NonReversibleActionPairCommand --> ABCCommand
ReversibleCommand ----> ABCCommand

CommandHistory .--> "*" NonReversibleActionPairCommand

Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult
@enduml
